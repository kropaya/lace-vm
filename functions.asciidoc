A function has an external ABI (a type signature) that specifies how it may be called, and what it returns.
A function has an internal ABI (a bounded label tree, a bounded locals tree, and a bounded set of code traces) which specifies what the rts has to do on function entry to be able to run the code. 

Functions are declared in HAIL, or generated with MOP.

Declaration adds them to the GOT.

cubical type theory - the 'structure' of a type
so we need graft/check/cut, labels, jump
we need the polymorphic row type stuff
we need 

Their form is
μ names.
  λ variables. name.
    pattern = ...
    pattern = ...
    etc...
  .
.

μ adds names to the current outer scope
λ and ı add names to the local scope

